---
import { DropdownNavbar } from '@components/ui/DropdownNavbar'
---

<nav class="border-gray-200  bg-slate-400/25 dark:bg-zinc-900">
  <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
    <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
      <h1 class='title'>
          Web <span class="text-transparent bg-clip-text bg-gradient-to-r to-emerald-600 from-sky-400">Developer</span>
      </h1>
    </a>
    <button data-collapse-toggle="navbar-default" type="button" id="hamburger-btn" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
        <span class="sr-only">Abrir men√∫ principal</span>
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
        </svg>
    </button>
    <div class="hidden w-full md:block md:w-auto" id="navbar-default">
      <ul class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-transparent dark:bg-gray-800 dark:bg-transparent uppercase">
        <DropdownNavbar client:only />
      </ul>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('astro:page-load', () => {
    const navbarDefault = document.querySelector('#navbar-default')
    const hamburguerBtn = document.querySelector('#hamburger-btn')

    const isHamburgerBtn = hamburguerBtn instanceof HTMLButtonElement && hamburguerBtn !== null
    const isNavbarDefault = navbarDefault instanceof HTMLDivElement && navbarDefault!== null

    function handleHamburger() {
      if (!isNavbarDefault) {
        return
      }
      navbarDefault.classList.toggle('hidden')
    }

    if (isHamburgerBtn) {
      hamburguerBtn.addEventListener('click', handleHamburger)
    }
  })
</script>
  